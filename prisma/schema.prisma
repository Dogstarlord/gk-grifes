// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum ProductStatus {
    IN_STOCK
    OUT_STOCK
}





enum PaymentMethod {
    PIX
    CREDITO
    DEBITO
}

enum PaymentStatus {
    APPROVED
    PENDING
}

model Product {
    id          Int           @id @default(autoincrement())
    img         String
    title       String
    price       Float
    categoryId  Int
    description String        @db.Text  
    quantity    Int           @default(1)
    status      ProductStatus
    category    Category      @relation(fields: [categoryId], references: [id])
    payments    Payment[]
    

    paymentProducts PaymentProduct[]
}



model Category {
    id       Int       @id @default(autoincrement())
    name     String
  
    products Product[]
}

model User {
    id       Int       @id @default(autoincrement())
    name     String?
    email    String    @unique
    password String
    payments Payment[]
}

model Payment {
    id              Int           @id @default(autoincrement())
    userId          Int
    productId       Int?
    productQuantity Int?
    amount          Float
    gatewayId       String        @unique
    paymentMethod   PaymentMethod
    status          PaymentStatus
             

    product Product? @relation(fields: [productId], references: [id])
    user    User    @relation(fields: [userId], references: [id])

    paymentProducts PaymentProduct[]
}

model PaymentProduct {
    id         Int    @id @default(autoincrement())
    paymentId  Int
    productId  Int
    quantity   Int
 
    product    Product @relation(fields: [productId], references: [id]) 
    payment    Payment @relation(fields: [paymentId], references: [id])

    }